// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example-simple.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_example_2dsimple_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_example_2dsimple_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_example_2dsimple_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_example_2dsimple_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_example_2dsimple_2eproto;
namespace ofxProtobuf {
class ProtoData;
class ProtoDataDefaultTypeInternal;
extern ProtoDataDefaultTypeInternal _ProtoData_default_instance_;
}  // namespace ofxProtobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::ofxProtobuf::ProtoData* Arena::CreateMaybeMessage<::ofxProtobuf::ProtoData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ofxProtobuf {

// ===================================================================

class ProtoData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ofxProtobuf.ProtoData) */ {
 public:
  inline ProtoData() : ProtoData(nullptr) {};
  virtual ~ProtoData();

  ProtoData(const ProtoData& from);
  ProtoData(ProtoData&& from) noexcept
    : ProtoData() {
    *this = ::std::move(from);
  }

  inline ProtoData& operator=(const ProtoData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoData& operator=(ProtoData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoData* internal_default_instance() {
    return reinterpret_cast<const ProtoData*>(
               &_ProtoData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoData& a, ProtoData& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoData* New() const final {
    return CreateMaybeMessage<ProtoData>(nullptr);
  }

  ProtoData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoData& from);
  void MergeFrom(const ProtoData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ofxProtobuf.ProtoData";
  }
  protected:
  explicit ProtoData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_example_2dsimple_2eproto);
    return ::descriptor_table_example_2dsimple_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVertexXFieldNumber = 5,
    kVertexYFieldNumber = 6,
    kColorRFieldNumber = 1,
    kColorGFieldNumber = 2,
    kColorBFieldNumber = 3,
    kColorAFieldNumber = 4,
  };
  // repeated float vertex_x = 5;
  int vertex_x_size() const;
  private:
  int _internal_vertex_x_size() const;
  public:
  void clear_vertex_x();
  private:
  float _internal_vertex_x(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vertex_x() const;
  void _internal_add_vertex_x(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vertex_x();
  public:
  float vertex_x(int index) const;
  void set_vertex_x(int index, float value);
  void add_vertex_x(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vertex_x() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vertex_x();

  // repeated float vertex_y = 6;
  int vertex_y_size() const;
  private:
  int _internal_vertex_y_size() const;
  public:
  void clear_vertex_y();
  private:
  float _internal_vertex_y(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vertex_y() const;
  void _internal_add_vertex_y(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vertex_y();
  public:
  float vertex_y(int index) const;
  void set_vertex_y(int index, float value);
  void add_vertex_y(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vertex_y() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vertex_y();

  // uint32 color_r = 1;
  void clear_color_r();
  ::PROTOBUF_NAMESPACE_ID::uint32 color_r() const;
  void set_color_r(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_color_r() const;
  void _internal_set_color_r(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 color_g = 2;
  void clear_color_g();
  ::PROTOBUF_NAMESPACE_ID::uint32 color_g() const;
  void set_color_g(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_color_g() const;
  void _internal_set_color_g(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 color_b = 3;
  void clear_color_b();
  ::PROTOBUF_NAMESPACE_ID::uint32 color_b() const;
  void set_color_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_color_b() const;
  void _internal_set_color_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 color_a = 4;
  void clear_color_a();
  ::PROTOBUF_NAMESPACE_ID::uint32 color_a() const;
  void set_color_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_color_a() const;
  void _internal_set_color_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ofxProtobuf.ProtoData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vertex_x_;
  mutable std::atomic<int> _vertex_x_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vertex_y_;
  mutable std::atomic<int> _vertex_y_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 color_r_;
  ::PROTOBUF_NAMESPACE_ID::uint32 color_g_;
  ::PROTOBUF_NAMESPACE_ID::uint32 color_b_;
  ::PROTOBUF_NAMESPACE_ID::uint32 color_a_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_example_2dsimple_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoData

// uint32 color_r = 1;
inline void ProtoData::clear_color_r() {
  color_r_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoData::_internal_color_r() const {
  return color_r_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoData::color_r() const {
  // @@protoc_insertion_point(field_get:ofxProtobuf.ProtoData.color_r)
  return _internal_color_r();
}
inline void ProtoData::_internal_set_color_r(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  color_r_ = value;
}
inline void ProtoData::set_color_r(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_color_r(value);
  // @@protoc_insertion_point(field_set:ofxProtobuf.ProtoData.color_r)
}

// uint32 color_g = 2;
inline void ProtoData::clear_color_g() {
  color_g_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoData::_internal_color_g() const {
  return color_g_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoData::color_g() const {
  // @@protoc_insertion_point(field_get:ofxProtobuf.ProtoData.color_g)
  return _internal_color_g();
}
inline void ProtoData::_internal_set_color_g(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  color_g_ = value;
}
inline void ProtoData::set_color_g(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_color_g(value);
  // @@protoc_insertion_point(field_set:ofxProtobuf.ProtoData.color_g)
}

// uint32 color_b = 3;
inline void ProtoData::clear_color_b() {
  color_b_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoData::_internal_color_b() const {
  return color_b_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoData::color_b() const {
  // @@protoc_insertion_point(field_get:ofxProtobuf.ProtoData.color_b)
  return _internal_color_b();
}
inline void ProtoData::_internal_set_color_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  color_b_ = value;
}
inline void ProtoData::set_color_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_color_b(value);
  // @@protoc_insertion_point(field_set:ofxProtobuf.ProtoData.color_b)
}

// uint32 color_a = 4;
inline void ProtoData::clear_color_a() {
  color_a_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoData::_internal_color_a() const {
  return color_a_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoData::color_a() const {
  // @@protoc_insertion_point(field_get:ofxProtobuf.ProtoData.color_a)
  return _internal_color_a();
}
inline void ProtoData::_internal_set_color_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  color_a_ = value;
}
inline void ProtoData::set_color_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_color_a(value);
  // @@protoc_insertion_point(field_set:ofxProtobuf.ProtoData.color_a)
}

// repeated float vertex_x = 5;
inline int ProtoData::_internal_vertex_x_size() const {
  return vertex_x_.size();
}
inline int ProtoData::vertex_x_size() const {
  return _internal_vertex_x_size();
}
inline void ProtoData::clear_vertex_x() {
  vertex_x_.Clear();
}
inline float ProtoData::_internal_vertex_x(int index) const {
  return vertex_x_.Get(index);
}
inline float ProtoData::vertex_x(int index) const {
  // @@protoc_insertion_point(field_get:ofxProtobuf.ProtoData.vertex_x)
  return _internal_vertex_x(index);
}
inline void ProtoData::set_vertex_x(int index, float value) {
  vertex_x_.Set(index, value);
  // @@protoc_insertion_point(field_set:ofxProtobuf.ProtoData.vertex_x)
}
inline void ProtoData::_internal_add_vertex_x(float value) {
  vertex_x_.Add(value);
}
inline void ProtoData::add_vertex_x(float value) {
  _internal_add_vertex_x(value);
  // @@protoc_insertion_point(field_add:ofxProtobuf.ProtoData.vertex_x)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProtoData::_internal_vertex_x() const {
  return vertex_x_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProtoData::vertex_x() const {
  // @@protoc_insertion_point(field_list:ofxProtobuf.ProtoData.vertex_x)
  return _internal_vertex_x();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProtoData::_internal_mutable_vertex_x() {
  return &vertex_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProtoData::mutable_vertex_x() {
  // @@protoc_insertion_point(field_mutable_list:ofxProtobuf.ProtoData.vertex_x)
  return _internal_mutable_vertex_x();
}

// repeated float vertex_y = 6;
inline int ProtoData::_internal_vertex_y_size() const {
  return vertex_y_.size();
}
inline int ProtoData::vertex_y_size() const {
  return _internal_vertex_y_size();
}
inline void ProtoData::clear_vertex_y() {
  vertex_y_.Clear();
}
inline float ProtoData::_internal_vertex_y(int index) const {
  return vertex_y_.Get(index);
}
inline float ProtoData::vertex_y(int index) const {
  // @@protoc_insertion_point(field_get:ofxProtobuf.ProtoData.vertex_y)
  return _internal_vertex_y(index);
}
inline void ProtoData::set_vertex_y(int index, float value) {
  vertex_y_.Set(index, value);
  // @@protoc_insertion_point(field_set:ofxProtobuf.ProtoData.vertex_y)
}
inline void ProtoData::_internal_add_vertex_y(float value) {
  vertex_y_.Add(value);
}
inline void ProtoData::add_vertex_y(float value) {
  _internal_add_vertex_y(value);
  // @@protoc_insertion_point(field_add:ofxProtobuf.ProtoData.vertex_y)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProtoData::_internal_vertex_y() const {
  return vertex_y_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProtoData::vertex_y() const {
  // @@protoc_insertion_point(field_list:ofxProtobuf.ProtoData.vertex_y)
  return _internal_vertex_y();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProtoData::_internal_mutable_vertex_y() {
  return &vertex_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProtoData::mutable_vertex_y() {
  // @@protoc_insertion_point(field_mutable_list:ofxProtobuf.ProtoData.vertex_y)
  return _internal_mutable_vertex_y();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace ofxProtobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_example_2dsimple_2eproto
